<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>hashdata</groupId>
	<artifactId>bireme-integration-tests</artifactId>
	<name>Integration Tests</name>
	<version>0.2.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<description>Bireme suite of integration tests</description>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>make-tar</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.22.1</version>
				<configuration>
					<logDate>default</logDate>
					<autoPull>true</autoPull>
					<images>
						<!-- Docker image for Postgres -->
						<image>
							<alias>Postgres</alias>
							<name>debezium/postgres:latest</name>
							<run>
								<ports>
									<port>5432:5432</port>
								</ports>
								<namingStrategy>alias</namingStrategy>
								<wait>
									<log>database system is ready to accept connections</log>
									<time>20000</time>
								</wait>
								<log>
									<prefix>Postgres</prefix>
									<color>blue</color>
								</log>
							</run>
						</image>
						<!-- Docker image for Zookeeper -->
						<image>
							<alias>Zookeeper</alias>
							<name>debezium/zookeeper:0.5</name>
							<run>
								<ports>
									<port>2181:2181</port>
									<port>2888:2888</port>
									<port>3888:3888</port>
								</ports>
								<namingStrategy>alias</namingStrategy>
								<wait>
									<log>binding to port 0.0.0.0/0.0.0.0:2181</log>
									<time>20000</time>
								</wait>
								<log>
									<prefix>Zookeeper</prefix>
									<color>yellow</color>
								</log>
							</run>
						</image>
						<!-- Docker image for Kafka -->
						<image>
							<alias>Kafka</alias>
							<name>debezium/kafka:0.5</name>
							<run>
								<ports>
									<port>9092:9092</port>
								</ports>
								<namingStrategy>alias</namingStrategy>
								<env>
									<ADVERTISED_HOST_NAME>${env.HOST_IP}</ADVERTISED_HOST_NAME>
									<ZOOKEEPER_CONNECT>Zookeeper:2181</ZOOKEEPER_CONNECT>
								</env>
								<links>
									<link>Zookeeper:Zookeeper</link>
								</links>
								<wait>
									<log>started</log>
									<time>20000</time>
								</wait>
								<log>
									<prefix>Kafka</prefix>
									<color>green</color>
								</log>
							</run>
						</image>
						<!-- Docker image for Connect -->
						<image>
							<alias>Connect</alias>
							<name>debezium/connect:0.5</name>
							<run>
								<ports>
									<port>8083:8083</port>
								</ports>
								<namingStrategy>alias</namingStrategy>
								<env>
									<BOOTSTRAP_SERVERS>Kafka:9092</BOOTSTRAP_SERVERS>
									<CONFIG_STORAGE_TOPIC>my_connect_configs</CONFIG_STORAGE_TOPIC>
									<OFFSET_STORAGE_TOPIC>my_connect_offsets</OFFSET_STORAGE_TOPIC>
								</env>
								<links>
									<link>Zookeeper:Zookeeper</link>
									<link>Postgres:Postgres</link>
									<link>Kafka:Kafka</link>
								</links>
								<wait>
									<log>Finished starting connectors and tasks</log>
									<time>20000</time>
								</wait>
								<log>
									<prefix>Connect</prefix>
									<color>red</color>
								</log>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>